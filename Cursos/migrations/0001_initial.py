# Generated by Django 5.0.6 on 2024-07-25 19:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='categorias/', verbose_name='Imagen')),
                ('slug', models.SlugField(editable=False, max_length=255, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Leccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('contenido', models.TextField(verbose_name='Contenido')),
                ('orden', models.PositiveIntegerField(verbose_name='Orden')),
                ('tiempo_estimado', models.PositiveIntegerField(help_text='Tiempo estimado en minutos', verbose_name='Tiempo estimado')),
                ('tipo_contenido', models.CharField(choices=[('video', 'Video'), ('texto', 'Texto'), ('quiz', 'Quiz'), ('tarea', 'Tarea')], max_length=50, verbose_name='Tipo de contenido')),
                ('url_contenido', models.URLField(blank=True, max_length=1024, verbose_name='URL del contenido')),
            ],
            options={
                'verbose_name': 'Lección',
                'verbose_name_plural': 'Lecciones',
                'ordering': ['tema', 'orden'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True, verbose_name='Nombre')),
                ('slug', models.SlugField(editable=False, max_length=255, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TemaCompletado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_completado', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de completado')),
            ],
            options={
                'verbose_name': 'Tema Completado',
                'verbose_name_plural': 'Temas Completados',
                'ordering': ['-fecha_completado'],
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('slug', models.SlugField(editable=False, max_length=255, verbose_name='Slug')),
                ('descripcion', models.TextField(verbose_name='Descripción detallada del curso')),
                ('descripcion_corta', models.CharField(max_length=1000, verbose_name='Descripción corta')),
                ('lo_que_aprenderas', models.TextField(blank=True, verbose_name='Lo que aprenderás')),
                ('video_introductorio', models.URLField(blank=True, max_length=1024, verbose_name='Video introductorio')),
                ('materiales_incluidos', models.TextField(verbose_name='Materiales incluidos')),
                ('audiencia', models.TextField(blank=True, verbose_name='Audiencia objetivo')),
                ('modalidad', models.CharField(choices=[('Sincrónico', 'Sincrónico'), ('Asincrónico', 'Asincrónico'), ('Híbrido', 'Híbrido')], max_length=20, verbose_name='Modalidad')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('imagen_principal_url', models.URLField(blank=True, max_length=1024, verbose_name='URL de la imagen principal')),
                ('dificultad', models.CharField(choices=[('Principiante', 'Principiante'), ('Intermedio', 'Intermedio'), ('Avanzado', 'Avanzado')], max_length=12, verbose_name='Dificultad')),
                ('prerrequisitos', models.TextField(blank=True, verbose_name='Prerrequisitos')),
                ('es_activo', models.BooleanField(default=True, verbose_name='¿Está activo?')),
                ('es_destacado', models.BooleanField(default=False, verbose_name='¿Está destacado?')),
                ('es_premium', models.BooleanField(default=False, verbose_name='¿Es premium?')),
                ('precio', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Precio')),
                ('calificacion_promedio', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Calificación promedio')),
                ('progreso_promedio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Progreso promedio')),
                ('tasa_finalizacion', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Tasa de finalización')),
                ('portada_curso', models.ImageField(blank=True, upload_to='portadas_cursos/', verbose_name='Portada del curso')),
                ('requisitos_tecnicos', models.TextField(blank=True, verbose_name='Requisitos técnicos')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualización')),
                ('duracion_total', models.PositiveIntegerField(default=0, help_text='Duración total en minutos', verbose_name='Duración total')),
                ('nivel_satisfaccion', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Nivel de satisfacción')),
                ('certificado_disponible', models.BooleanField(default=False, verbose_name='¿Certificado disponible?')),
                ('idiomas_disponibles', models.JSONField(blank=True, default=list, verbose_name='Idiomas disponibles')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos', to='Cursos.categoria', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Certificado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_emision', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de emisión')),
                ('codigo_verificacion', models.CharField(max_length=50, unique=True, verbose_name='Código de verificación')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificados', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificados', to='Cursos.curso', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Certificado',
                'verbose_name_plural': 'Certificados',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de inscripción')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones_curso', to='Cursos.curso', verbose_name='Curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'ordering': ['-fecha_inscripcion'],
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='inscritos',
            field=models.ManyToManyField(related_name='cursos_inscritos', through='Cursos.Inscripcion', to=settings.AUTH_USER_MODEL, verbose_name='Inscritos'),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=255, verbose_name='Título')),
                ('bio', models.TextField(blank=True, verbose_name='Biografía')),
                ('foto_url', models.URLField(blank=True, max_length=1024, verbose_name='URL de la foto')),
                ('promedio_calificacion', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Promedio de calificación')),
                ('num_reseñas', models.PositiveIntegerField(default=0, verbose_name='Número de reseñas')),
                ('num_estudiantes', models.PositiveIntegerField(default=0, verbose_name='Número de estudiantes')),
                ('redes_sociales', models.JSONField(blank=True, default=dict, verbose_name='Redes sociales')),
                ('especialidades', models.ManyToManyField(related_name='instructores_especializados', to='Cursos.categoria', verbose_name='Especialidades')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_instructor', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Instructor',
                'verbose_name_plural': 'Perfiles de Instructores',
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='profesor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos_creados', to='Cursos.instructor', verbose_name='Profesor'),
        ),
        migrations.CreateModel(
            name='LeccionCompletada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_completado', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de completado')),
                ('leccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios_completadoss', to='Cursos.leccion', verbose_name='Lección')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecciones_completadass', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Lección Completada',
                'verbose_name_plural': 'Lecciones Completadas',
                'ordering': ['-fecha_completado'],
            },
        ),
        migrations.CreateModel(
            name='Progreso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porcentaje', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Porcentaje de progreso')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progresos', to='Cursos.curso', verbose_name='Curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curso_progresos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Progreso',
                'verbose_name_plural': 'Progresos',
                'ordering': ['-fecha_actualizacion'],
            },
        ),
        migrations.CreateModel(
            name='Reseña',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación')),
                ('comentario', models.TextField(blank=True, verbose_name='Comentario')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('utilidad', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Utilidad')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas', to='Cursos.curso', verbose_name='Curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Reseña',
                'verbose_name_plural': 'Reseñas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='curso', to='Cursos.tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='Slug')),
                ('contenido', models.TextField(verbose_name='Contenido')),
                ('orden', models.PositiveIntegerField(verbose_name='Orden')),
                ('tiempo_estimado', models.PositiveIntegerField(help_text='Tiempo estimado en minutos', verbose_name='Tiempo estimado')),
                ('microlearning', models.BooleanField(default=False, help_text='Indica si el tema es parte de una estrategia de microaprendizaje', verbose_name='Microlearning')),
                ('recursos_adicionales', models.JSONField(blank=True, default=list, verbose_name='Recursos adicionales')),
                ('objetivos_aprendizaje', models.TextField(blank=True, verbose_name='Objetivos de aprendizaje')),
                ('contribuyentes', models.ManyToManyField(blank=True, related_name='temas_contribuidos', to=settings.AUTH_USER_MODEL, verbose_name='Contribuyentes')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temas', to='Cursos.curso', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
                'ordering': ['curso', 'orden'],
            },
        ),
    ]
